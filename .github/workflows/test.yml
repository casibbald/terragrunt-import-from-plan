name: Test Import Script

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]

jobs:
  test-import-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Set up Shell Test Env
        run: sudo apt-get install -y jq

      - name: Setup terragrunt
        run: |
          wget -O terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.67.16/terragrunt_linux_amd64
          chmod +x terragrunt
          sudo mv terragrunt /usr/local/bin/

      - name: Install Just
        uses: extractions/setup-just@v3

      - name: Cargo build
        run: cargo build

      - name: Initialize GCP test environment
        run: |
          cd envs/simulator/gcp/dev
          terragrunt init --terragrunt-non-interactive || echo "GCP init failed, continuing..."
          terragrunt run-all plan -out=out.tfplan --terragrunt-non-interactive || echo "GCP plan failed, continuing..."

      - name: Initialize AWS test environment
        run: |
          cd envs/simulator/aws/dev
          terragrunt init --terragrunt-non-interactive || echo "AWS init failed, continuing..."
          terragrunt run-all plan -out=out.tfplan --terragrunt-non-interactive || echo "AWS plan failed, continuing..."

      - name: Cargo test
        run: cargo test -- --test-threads=1

      - name: Cargo test with output
        run: cargo test -- --test-threads=1 --nocapture

      - name: Dry run test - GCP modules
        run: cargo run -- --plan tests/fixtures/gcp/out.json --modules tests/fixtures/gcp/modules.json --module-root simulator/gcp/modules --dry-run --working-directory envs/simulator/gcp/dev

      - name: Dry run test - AWS modules
        run: cargo run -- --plan tests/fixtures/aws/out.json --modules tests/fixtures/aws/modules.json --module-root simulator/aws/modules --dry-run --working-directory envs/simulator/aws/dev
#
#      - name: Run just plan
#        run: just plan
#
#      - name: Run entrypoint test
#        run: |
#          chmod +x entrypoint.sh
#          ./test/entrypoint_test.sh

